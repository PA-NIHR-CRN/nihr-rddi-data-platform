name: Deploy To ECR

on:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        description: Select the environment
        default: dev
        options:
          - dev
          - test
          - uat
          - oat
          - prod

env:
  AWS_REGION: ${{ secrets.AWS_REGION }}

jobs:
  build:
    name: 'Build'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

  deploy-dev:
    needs: [build]
    environment: DEV
    name: 'Deploy Dev'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials - Dev
        # if: github.ref == 'refs/heads/main'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.NIHR_DEVELOPMENT_IAM_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.NIHR_DEVELOPMENT_IAM_ACCESS_KEY_SECRET }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: 'true'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REPOSITORY: nihrd-ecr-dev-rddi-data-platform
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_SHA_TAG: nihrd-rddi-data-platform-${{ github.sha }}
        run: |
          echo "Using registry ${{ env.ECR_REGISTRY }}"
          echo "Tagging image with ${{ env.IMAGE_SHA_TAG }}"
          docker build -f src/nihrd-ebr-rddi-s3-dev-raw/Dockerfile -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_SHA_TAG ./src
          docker push --all-tags $ECR_REGISTRY/$ECR_REPOSITORY
          echo "image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_SHA_TAG" >> "$GITHUB_OUTPUT"
